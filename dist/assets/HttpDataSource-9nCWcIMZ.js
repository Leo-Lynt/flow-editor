import{m as l}from"./mappings-w7oajga6.js";class d{async fetch(t,e){throw new Error("IDataSource.fetch() must be implemented")}validate(t){throw new Error("IDataSource.validate() must be implemented")}getSourceType(){throw new Error("IDataSource.getSourceType() must be implemented")}}class y extends d{constructor(t="http://localhost:3001/api"){super(),this.apiBaseUrl=t,this.sourceType=null}async fetch(t,e){const n=`${this.apiBaseUrl}/connectors/execute`,o=e.apiConfig?.token,u=this.getSourceType(),i=l(u),{sourceType:T,...p}=t;try{const r=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",...o&&{Authorization:`Bearer ${o}`},...e.userId&&{"X-User-Id":e.userId}},body:JSON.stringify({sourceType:i,config:p,userId:e.userId})});if(!r.ok){const h=await r.json().catch(()=>({}));throw new Error(h.message||`HTTP ${r.status}: ${r.statusText}`)}const a=await r.json();return a.data?.result?.data||a.data}catch(r){throw console.error(`❌ HttpDataSource fetch error (${this.getSourceType()}):`,r.message),r}}validate(t){return{valid:!0,errors:[]}}getSourceType(){return this.sourceType}}class s{static create(t){const e=new y;return e.sourceType=t,e}static createAll(){return["google_sheets","google_analytics","api","json","csv","graphql","database","mk3d"].map(e=>({type:e,adapter:s.create(e)}))}}export{y as HttpDataSource,s as HttpDataSourceFactory};
