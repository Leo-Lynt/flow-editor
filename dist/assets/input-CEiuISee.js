function f({nodeData:c,context:i}){const Y=c.parameters||[],s={};return Y.forEach(t=>{var $;const l=t.name;let e=(($=i.inputValues)==null?void 0:$[l])??t.defaultValue;if(t.type==="date"&&e){const p=t.dateFormat||"DD/MM/YYYY";let n=null;if(typeof e=="string"&&/^\d{4}-\d{2}-\d{2}$/.test(e)){const[a,o,r]=e.split("-").map(Number);n=new Date(a,o-1,r)}else typeof e=="string"?n=new Date(e):e instanceof Date&&(n=e);if(n&&!isNaN(n.getTime())){const a=n.getFullYear(),o=String(n.getMonth()+1).padStart(2,"0"),r=String(n.getDate()).padStart(2,"0");switch(p){case"DD/MM/YYYY":e=`${r}/${o}/${a}`;break;case"MM/DD/YYYY":e=`${o}/${r}/${a}`;break;case"YYYY-MM-DD":e=`${a}-${o}-${r}`;break;case"DD-MM-YYYY":e=`${r}-${o}-${a}`;break;case"YYYY/MM/DD":e=`${a}/${o}/${r}`;break;default:e=`${r}/${o}/${a}`}}}if((t.type==="number"||t.type==="integer"||t.type==="float")&&typeof e=="string"&&(e=t.type==="integer"?parseInt(e,10):parseFloat(e)),(t.type==="array"||t.type==="object")&&typeof e=="string")try{e=JSON.parse(e)}catch(p){console.warn(`Failed to parse ${t.type} for parameter ${l}:`,p)}s[l]=e}),console.log("üîµ Input node execute:",{parameters:Y,result:s}),s}function u(c){const i=[];return(c.parameters||[]).forEach((s,t)=>{s.name||i.push(`Par√¢metro no √≠ndice ${t} n√£o possui nome`),s.type||i.push(`Par√¢metro "${s.name}" n√£o possui tipo`)}),{valid:i.length===0,errors:i}}export{f as execute,u as validate};
