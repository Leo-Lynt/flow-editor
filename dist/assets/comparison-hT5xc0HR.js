import{u as o}from"./executor-D39oo3pD.js";import"./index-CpYWmskZ.js";const{unwrapData:n}=o;function c({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e===t}function s({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e!==t}function u({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e>t}function l({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e<t}function b({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e>=t}function f({nodeData:a,inputs:r}){const e=n(r.a),t=n(r.b);return e<=t}function h({nodeData:a,inputs:r}){const e=a.operation||"equals";switch(e){case"equals":return c({nodeData:a,inputs:r});case"not-equals":return s({nodeData:a,inputs:r});case"greater-than":return u({nodeData:a,inputs:r});case"less-than":return l({nodeData:a,inputs:r});case"greater-or-equal":return b({nodeData:a,inputs:r});case"less-or-equal":return f({nodeData:a,inputs:r});default:throw new Error(`Unknown comparison operation: ${e}`)}}function m(a){return{valid:!0,errors:[]}}export{h as compare,c as equals,b as greaterOrEqual,u as greaterThan,f as lessOrEqual,l as lessThan,s as notEquals,m as validate};
