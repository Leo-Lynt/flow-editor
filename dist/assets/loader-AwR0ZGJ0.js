import{r as u,a as p,b as l}from"./index-CTqQs7-6.js";let n=!1,c=null;function f(o){const r=[];return o?(o.version||r.push('Campo "version" obrigatório não encontrado'),(!o.nodes||!Array.isArray(o.nodes))&&r.push('Campo "nodes" deve ser um array'),o.categories&&!Array.isArray(o.categories)&&r.push('Campo "categories" deve ser um array'),o.nodes&&o.nodes.forEach((e,s)=>{e.type||r.push(`Node no índice ${s} não possui campo "type"`),e.label||r.push(`Node "${e.type||s}" não possui campo "label"`),e.method||r.push(`Node "${e.type||s}" não possui campo "method"`),e.category||r.push(`Node "${e.type||s}" não possui campo "category"`)}),{valid:r.length===0,errors:r}):(r.push("Catálogo está vazio ou inválido"),{valid:!1,errors:r})}async function h(o="http://localhost:3001"){if(n)return c;try{const e=await fetch(`${o}/api/nodes`);if(!e.ok)throw new Error(`Erro ao carregar catálogo: ${e.status} ${e.statusText}`);const s=await e.json();if(!s.success)throw new Error(`API error: ${s.error?.message||"Unknown error"}`);const t=s.data,i=f(t);if(!i.valid)throw new Error(`Catálogo inválido: ${i.errors.join(", ")}`);return t.categories&&t.categories.forEach(a=>{p(a.id,a)}),t.nodes.forEach(a=>{l(a.type,a)}),n=!0,c=t,t}catch(r){throw r}}async function g(){try{return{success:!0,catalog:await h(),stats:u.getStats()}}catch(o){return{success:!1,error:o.message}}}export{g as initializeEngine,h as loadNodeCatalog};
