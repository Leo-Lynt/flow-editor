import{u as o}from"./executor-D39oo3pD.js";import"./index-CpYWmskZ.js";const{unwrapData:u}=o;function p({nodeData:r,inputs:e}){let t=u(e["data-input"]);if(!Array.isArray(t))throw new Error("Input deve ser um array");const s=r.operation||"first";switch(s){case"first":return t.length>0?t[0]:null;case"last":return t.length>0?t[t.length-1]:null;case"take":{const n=Math.max(0,parseInt(r.count)||1);return t.slice(0,n)}case"skip":{const n=Math.max(0,parseInt(r.count)||1);return t.slice(n)}case"slice":{const n=parseInt(r.start)||0,i=r.end!==void 0?parseInt(r.end):void 0;return t.slice(n,i)}default:throw new Error(`Operação "${s}" não suportada`)}}function l(r){const e=[];return r.operation||e.push('Campo "operation" obrigatório'),["take","skip"].includes(r.operation)&&!r.count&&e.push(`Operação "${r.operation}" requer campo "count"`),r.operation==="slice"&&r.start===void 0&&e.push('Operação "slice" requer campo "start"'),{valid:e.length===0,errors:e}}export{p as execute,l as validate};
